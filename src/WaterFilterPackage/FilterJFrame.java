/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package WaterFilterPackage;

import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import javax.swing.Icon;
import javax.swing.JOptionPane;

/**
 * Main frame for the water filter activity. This program runs a demo for how 
 * water filters work. By clicking on 5 materials on the left, and picking a 
 * filter stage on the right, you can run a mini-demo of a water filter. 
 * 
 * *this product is for educational purposes only.*
 * 
 * @author Tyler Hertenstein, Matt Bishop, Alyson Wolford, Charles Sauerland
 * @Version 1.0.0 - 24 April 2014
 */
public class FilterJFrame extends javax.swing.JFrame {
    
private HowToPlayDialog opener;
    
public boolean isPicSelected = false;
public boolean isLevelSelected = false;
private Component currentPicture = null; //referance to an active label
private Component currentPicturePlacement = null; //reference to the pic dest.
public int picNumber;
public Icon myIcon;
public final Color startingColor = Color.white;
public final Color selectionColor = Color.green;

public int highScore = 0;
public int score = 0;

public static final int NUMBER_OF_STAGES = 5;
public final FilterItem PAPER         = new FilterItem("Paper", "paper.jpg", "Small", 60 );
public final FilterItem CHARCOAL      = new FilterItem("Charcoal", "charcoal.jpg", "Small", 60 );
public final FilterItem GRASS         = new FilterItem("Grass", "grass.jpg", "Large", 600 );
public final FilterItem COTTONBALL    = new FilterItem("Cottonball", "cottonball.jpg", "Medium", 150 );
public final FilterItem PAPER_TOWEL   = new FilterItem("Paper Towel", "papertowel.jpg", "Small", 100 );
public final FilterItem COFFEE_FILTER = new FilterItem("Coffee Filter", "coffeefilter.jpg", "Small", 20 );
public final FilterItem FINE_GRAVEL   = new FilterItem("Fine Gravel", "finegravel.jpg", "Large", 1700 );
public final FilterItem COARSE_GRAVEL = new FilterItem("Coarse Gravel", "coarsegravel.jpg", "Large", 2500 );
public final FilterItem SAND          = new FilterItem("Sand", "sand.jpg", "Large", 300 );
public final FilterItem LINEN_CLOTH   = new FilterItem("Linen Cloth", "linencloth.jpg", "Small", 90 );
public final FilterItem CHEESE_CLOTH  = new FilterItem("Cheese Cloth", "cheesecloth.jpg", "Large", 400);
public final FilterItem MESH          = new FilterItem("Mesh", "mesh.jpg", "Medium", 150 );
public final FilterItem FLOUR         = new FilterItem("Flour", "flour.jpg", "Medium", 150 );
public final FilterItem CORNMEAL      = new FilterItem("CornMeal", "cornmeal.jpg", "Medium", 250 );
public final FilterItem FEATHERS      = new FilterItem("Feathers", "feather.jpg", "Medium", 120 ); 

public FilterItem[] filterStages  = new FilterItem[NUMBER_OF_STAGES];
public FilterItem   clickedFilter = new FilterItem();

    /**
     * Creates new form FilterJFrame
     */
    public FilterJFrame() {
        initComponents();
        resetBackgroundColors();
        
        // display the opening text about how to play
        opener = new HowToPlayDialog(null, true);
        opener.setVisible(true);
        
        // initialize the filter
        for (int i = 0; i < NUMBER_OF_STAGES; i++) {
            filterStages[i] = new FilterItem();
        }
                      
        // set tool tips to describe each item   
        setToolTips();
        Color transparent = new Color(0, 0, 0, 0);
        matLabelPane.setBackground(transparent);
        filterLevelsPane.setBackground(transparent);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        matLabelPane = new javax.swing.JPanel();
        featherLabel = new javax.swing.JLabel();
        cottonBallLabel = new javax.swing.JLabel();
        cheeseClothLabel = new javax.swing.JLabel();
        fineGravelLabel = new javax.swing.JLabel();
        grassLabel = new javax.swing.JLabel();
        linenClothLabel = new javax.swing.JLabel();
        flourLabel = new javax.swing.JLabel();
        coarseGravelLabel = new javax.swing.JLabel();
        coffeeFilterLabel = new javax.swing.JLabel();
        meshLabel = new javax.swing.JLabel();
        charcoalLabel = new javax.swing.JLabel();
        sandLabel = new javax.swing.JLabel();
        cornMealLabel = new javax.swing.JLabel();
        paperTowelLabel = new javax.swing.JLabel();
        paperLabel = new javax.swing.JLabel();
        materialsLabel = new javax.swing.JLabel();
        filterLevelsPane = new javax.swing.JPanel();
        filterLabel1 = new javax.swing.JLabel();
        filterLabel2 = new javax.swing.JLabel();
        filterLabel3 = new javax.swing.JLabel();
        filterLabel4 = new javax.swing.JLabel();
        filterLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        runButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();
        filterLevelsLabel = new javax.swing.JLabel();
        tagScoreLabel = new javax.swing.JLabel();
        scoreLabel = new javax.swing.JLabel();
        tagHighScoreLabel = new javax.swing.JLabel();
        highScoreLabel = new javax.swing.JLabel();
        messageLabel = new javax.swing.JLabel();
        backgroundImageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Building a Water Filter");
        setMaximumSize(new java.awt.Dimension(490, 445));
        setMinimumSize(new java.awt.Dimension(490, 445));
        setPreferredSize(new java.awt.Dimension(490, 445));
        getContentPane().setLayout(null);

        matLabelPane.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        matLabelPane.setLayout(null);

        featherLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/feather.JPG"))); // NOI18N
        featherLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        featherLabel.setMaximumSize(new java.awt.Dimension(57, 40));
        featherLabel.setMinimumSize(new java.awt.Dimension(57, 40));
        featherLabel.setPreferredSize(new java.awt.Dimension(57, 40));
        featherLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                featherLabelMouseClicked(evt);
            }
        });
        matLabelPane.add(featherLabel);
        featherLabel.setBounds(10, 194, 57, 40);

        cottonBallLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cottonball.jpg"))); // NOI18N
        cottonBallLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cottonBallLabel.setMaximumSize(new java.awt.Dimension(57, 40));
        cottonBallLabel.setMinimumSize(new java.awt.Dimension(57, 40));
        cottonBallLabel.setPreferredSize(new java.awt.Dimension(57, 40));
        cottonBallLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cottonBallLabelMouseClicked(evt);
            }
        });
        matLabelPane.add(cottonBallLabel);
        cottonBallLabel.setBounds(10, 143, 57, 40);

        cheeseClothLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cheesecloth.jpg"))); // NOI18N
        cheeseClothLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cheeseClothLabel.setMaximumSize(new java.awt.Dimension(57, 40));
        cheeseClothLabel.setMinimumSize(new java.awt.Dimension(57, 40));
        cheeseClothLabel.setPreferredSize(new java.awt.Dimension(57, 40));
        cheeseClothLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cheeseClothLabelMouseClicked(evt);
            }
        });
        matLabelPane.add(cheeseClothLabel);
        cheeseClothLabel.setBounds(85, 143, 57, 40);

        fineGravelLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/finegravel.jpg"))); // NOI18N
        fineGravelLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        fineGravelLabel.setMaximumSize(new java.awt.Dimension(57, 40));
        fineGravelLabel.setMinimumSize(new java.awt.Dimension(57, 40));
        fineGravelLabel.setPreferredSize(new java.awt.Dimension(57, 40));
        fineGravelLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fineGravelLabelMouseClicked(evt);
            }
        });
        matLabelPane.add(fineGravelLabel);
        fineGravelLabel.setBounds(85, 51, 57, 40);

        grassLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/grass.jpg"))); // NOI18N
        grassLabel.setToolTipText("Grass - pore size: Large");
        grassLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        grassLabel.setMaximumSize(new java.awt.Dimension(57, 40));
        grassLabel.setMinimumSize(new java.awt.Dimension(57, 40));
        grassLabel.setPreferredSize(new java.awt.Dimension(57, 40));
        grassLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grassLabelMouseClicked(evt);
            }
        });
        matLabelPane.add(grassLabel);
        grassLabel.setBounds(10, 51, 57, 40);

        linenClothLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/linencloth.jpg"))); // NOI18N
        linenClothLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        linenClothLabel.setMaximumSize(new java.awt.Dimension(57, 40));
        linenClothLabel.setMinimumSize(new java.awt.Dimension(57, 40));
        linenClothLabel.setPreferredSize(new java.awt.Dimension(57, 40));
        linenClothLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                linenClothLabelMouseClicked(evt);
            }
        });
        matLabelPane.add(linenClothLabel);
        linenClothLabel.setBounds(10, 97, 57, 40);

        flourLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/flour.jpg"))); // NOI18N
        flourLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        flourLabel.setMaximumSize(new java.awt.Dimension(57, 40));
        flourLabel.setMinimumSize(new java.awt.Dimension(57, 40));
        flourLabel.setPreferredSize(new java.awt.Dimension(57, 40));
        flourLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                flourLabelMouseClicked(evt);
            }
        });
        matLabelPane.add(flourLabel);
        flourLabel.setBounds(85, 194, 57, 40);

        coarseGravelLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/coursegravel.jpg"))); // NOI18N
        coarseGravelLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        coarseGravelLabel.setMaximumSize(new java.awt.Dimension(57, 40));
        coarseGravelLabel.setMinimumSize(new java.awt.Dimension(57, 40));
        coarseGravelLabel.setPreferredSize(new java.awt.Dimension(57, 40));
        coarseGravelLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                coarseGravelLabelMouseClicked(evt);
            }
        });
        matLabelPane.add(coarseGravelLabel);
        coarseGravelLabel.setBounds(10, 252, 57, 40);

        coffeeFilterLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/coffeefilter.jpg"))); // NOI18N
        coffeeFilterLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        coffeeFilterLabel.setMaximumSize(new java.awt.Dimension(57, 40));
        coffeeFilterLabel.setMinimumSize(new java.awt.Dimension(57, 40));
        coffeeFilterLabel.setPreferredSize(new java.awt.Dimension(57, 40));
        coffeeFilterLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                coffeeFilterLabelMouseClicked(evt);
            }
        });
        matLabelPane.add(coffeeFilterLabel);
        coffeeFilterLabel.setBounds(85, 97, 57, 40);

        meshLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/mesh.jpg"))); // NOI18N
        meshLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        meshLabel.setMaximumSize(new java.awt.Dimension(57, 40));
        meshLabel.setMinimumSize(new java.awt.Dimension(57, 40));
        meshLabel.setPreferredSize(new java.awt.Dimension(57, 40));
        meshLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meshLabelMouseClicked(evt);
            }
        });
        matLabelPane.add(meshLabel);
        meshLabel.setBounds(85, 252, 57, 40);

        charcoalLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/charcoal.jpg"))); // NOI18N
        charcoalLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        charcoalLabel.setMaximumSize(new java.awt.Dimension(57, 40));
        charcoalLabel.setMinimumSize(new java.awt.Dimension(57, 40));
        charcoalLabel.setPreferredSize(new java.awt.Dimension(57, 40));
        charcoalLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                charcoalLabelMouseClicked(evt);
            }
        });
        matLabelPane.add(charcoalLabel);
        charcoalLabel.setBounds(152, 51, 57, 40);

        sandLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/sand.jpg"))); // NOI18N
        sandLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        sandLabel.setMaximumSize(new java.awt.Dimension(57, 40));
        sandLabel.setMinimumSize(new java.awt.Dimension(57, 40));
        sandLabel.setPreferredSize(new java.awt.Dimension(57, 40));
        sandLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sandLabelMouseClicked(evt);
            }
        });
        matLabelPane.add(sandLabel);
        sandLabel.setBounds(152, 97, 57, 40);

        cornMealLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cornmeal.jpg"))); // NOI18N
        cornMealLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cornMealLabel.setMaximumSize(new java.awt.Dimension(57, 40));
        cornMealLabel.setMinimumSize(new java.awt.Dimension(57, 40));
        cornMealLabel.setPreferredSize(new java.awt.Dimension(57, 40));
        cornMealLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cornMealLabelMouseClicked(evt);
            }
        });
        matLabelPane.add(cornMealLabel);
        cornMealLabel.setBounds(152, 143, 57, 40);

        paperTowelLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/papertowel.jpg"))); // NOI18N
        paperTowelLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        paperTowelLabel.setMaximumSize(new java.awt.Dimension(57, 40));
        paperTowelLabel.setMinimumSize(new java.awt.Dimension(57, 40));
        paperTowelLabel.setPreferredSize(new java.awt.Dimension(57, 40));
        paperTowelLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paperTowelLabelMouseClicked(evt);
            }
        });
        matLabelPane.add(paperTowelLabel);
        paperTowelLabel.setBounds(152, 194, 57, 40);

        paperLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/paper.jpg"))); // NOI18N
        paperLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        paperLabel.setMaximumSize(new java.awt.Dimension(57, 40));
        paperLabel.setMinimumSize(new java.awt.Dimension(57, 40));
        paperLabel.setPreferredSize(new java.awt.Dimension(57, 40));
        paperLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paperLabelMouseClicked(evt);
            }
        });
        matLabelPane.add(paperLabel);
        paperLabel.setBounds(152, 252, 57, 40);

        materialsLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        materialsLabel.setText("Materials");
        matLabelPane.add(materialsLabel);
        materialsLabel.setBounds(52, 11, 109, 29);

        getContentPane().add(matLabelPane);
        matLabelPane.setBounds(0, 11, 220, 300);

        filterLevelsPane.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        filterLevelsPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                filterLevelsPaneMouseEntered(evt);
            }
        });
        filterLevelsPane.setLayout(null);

        filterLabel1.setToolTipText("");
        filterLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        filterLabel1.setMaximumSize(new java.awt.Dimension(57, 40));
        filterLabel1.setMinimumSize(new java.awt.Dimension(57, 40));
        filterLabel1.setOpaque(true);
        filterLabel1.setPreferredSize(new java.awt.Dimension(57, 40));
        filterLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filterLabel1MouseClicked(evt);
            }
        });
        filterLevelsPane.add(filterLabel1);
        filterLabel1.setBounds(81, 11, 57, 40);

        filterLabel2.setToolTipText("");
        filterLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        filterLabel2.setMaximumSize(new java.awt.Dimension(57, 40));
        filterLabel2.setMinimumSize(new java.awt.Dimension(57, 40));
        filterLabel2.setOpaque(true);
        filterLabel2.setPreferredSize(new java.awt.Dimension(57, 40));
        filterLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filterLabel2MouseClicked(evt);
            }
        });
        filterLevelsPane.add(filterLabel2);
        filterLabel2.setBounds(81, 57, 57, 40);

        filterLabel3.setToolTipText("");
        filterLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        filterLabel3.setMaximumSize(new java.awt.Dimension(57, 40));
        filterLabel3.setMinimumSize(new java.awt.Dimension(57, 40));
        filterLabel3.setOpaque(true);
        filterLabel3.setPreferredSize(new java.awt.Dimension(57, 40));
        filterLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filterLabel3MouseClicked(evt);
            }
        });
        filterLevelsPane.add(filterLabel3);
        filterLabel3.setBounds(81, 104, 57, 40);

        filterLabel4.setToolTipText("");
        filterLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        filterLabel4.setMaximumSize(new java.awt.Dimension(57, 40));
        filterLabel4.setMinimumSize(new java.awt.Dimension(57, 40));
        filterLabel4.setOpaque(true);
        filterLabel4.setPreferredSize(new java.awt.Dimension(57, 40));
        filterLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filterLabel4MouseClicked(evt);
            }
        });
        filterLevelsPane.add(filterLabel4);
        filterLabel4.setBounds(81, 150, 57, 40);

        filterLabel5.setToolTipText("");
        filterLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        filterLabel5.setMaximumSize(new java.awt.Dimension(57, 40));
        filterLabel5.setMinimumSize(new java.awt.Dimension(57, 40));
        filterLabel5.setOpaque(true);
        filterLabel5.setPreferredSize(new java.awt.Dimension(57, 40));
        filterLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filterLabel5MouseClicked(evt);
            }
        });
        filterLevelsPane.add(filterLabel5);
        filterLabel5.setBounds(81, 196, 57, 40);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Stage 1:");
        filterLevelsPane.add(jLabel1);
        jLabel1.setBounds(13, 22, 50, 14);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Stage 2:");
        filterLevelsPane.add(jLabel2);
        jLabel2.setBounds(13, 66, 50, 14);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Stage 3:");
        filterLevelsPane.add(jLabel3);
        jLabel3.setBounds(13, 120, 50, 14);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Stage 4:");
        filterLevelsPane.add(jLabel4);
        jLabel4.setBounds(13, 163, 50, 14);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Stage 5:");
        filterLevelsPane.add(jLabel5);
        jLabel5.setBounds(13, 210, 50, 14);

        getContentPane().add(filterLevelsPane);
        filterLevelsPane.setBounds(244, 58, 150, 250);

        runButton.setText("Run");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });
        getContentPane().add(runButton);
        runButton.setBounds(241, 320, 160, 23);

        resetButton.setText("Reset Board");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        getContentPane().add(resetButton);
        resetButton.setBounds(50, 319, 100, 23);

        helpButton.setText("Help");
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });
        getContentPane().add(helpButton);
        helpButton.setBounds(390, 360, 60, 40);

        filterLevelsLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        filterLevelsLabel.setText("Filter Levels");
        getContentPane().add(filterLevelsLabel);
        filterLevelsLabel.setBounds(250, 20, 144, 29);

        tagScoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        tagScoreLabel.setText("Latest Score:");
        getContentPane().add(tagScoreLabel);
        tagScoreLabel.setBounds(254, 360, 80, 14);

        scoreLabel.setText("?");
        getContentPane().add(scoreLabel);
        scoreLabel.setBounds(340, 360, 50, 14);

        tagHighScoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        tagHighScoreLabel.setText("High Score:");
        getContentPane().add(tagHighScoreLabel);
        tagHighScoreLabel.setBounds(265, 380, 70, 14);

        highScoreLabel.setText("?");
        getContentPane().add(highScoreLabel);
        highScoreLabel.setBounds(340, 380, 60, 14);

        messageLabel.setText("Pick a material for each filter stage!");
        getContentPane().add(messageLabel);
        messageLabel.setBounds(16, 349, 250, 50);

        backgroundImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rsz_waterbackground.jpg"))); // NOI18N
        getContentPane().add(backgroundImageLabel);
        backgroundImageLabel.setBounds(0, 0, 480, 410);

        pack();
    }// </editor-fold>//GEN-END:initComponents
//Incoming shit ton of mouse events (I dont know if there is a more efficent way
    // of doing this
    
    private void filterLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filterLabel1MouseClicked
        if(myIcon != null && filterLabel1.getIcon() == null){ 
            filterLabel1.setIcon(myIcon);
            filterStages[0] = clickedFilter;
            myIcon = null;
            resetBackgroundColors();
        }
        else
            resetBackgroundColors(); 
    }//GEN-LAST:event_filterLabel1MouseClicked

    private void filterLevelsPaneMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filterLevelsPaneMouseEntered

    }//GEN-LAST:event_filterLevelsPaneMouseEntered

    private void filterLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filterLabel2MouseClicked
      if(myIcon != null && filterLabel2.getIcon() == null){ 
            filterLabel2.setIcon(myIcon);
            filterStages[1] = clickedFilter;
            myIcon = null;
            resetBackgroundColors();
        }
        else
            resetBackgroundColors(); 
    }//GEN-LAST:event_filterLabel2MouseClicked

    private void filterLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filterLabel3MouseClicked
         if(myIcon != null && filterLabel3.getIcon() == null){ 
            filterLabel3.setIcon(myIcon);
            filterStages[2] = clickedFilter;
            myIcon = null;
            resetBackgroundColors();
        }
        else
            resetBackgroundColors(); 
    }//GEN-LAST:event_filterLabel3MouseClicked

    private void filterLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filterLabel4MouseClicked
       if(myIcon != null && filterLabel4.getIcon() == null){ 
            filterLabel4.setIcon(myIcon);
            filterStages[3] = clickedFilter;
            myIcon = null;
            resetBackgroundColors();
        }
        else
            resetBackgroundColors(); 
    }//GEN-LAST:event_filterLabel4MouseClicked

    private void filterLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filterLabel5MouseClicked
         if(myIcon != null && filterLabel5.getIcon() == null){ 
            filterLabel5.setIcon(myIcon);
            filterStages[4] = clickedFilter;
            myIcon = null;
            resetBackgroundColors();
        }
        else
            resetBackgroundColors(); 
    }//GEN-LAST:event_filterLabel5MouseClicked

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        resetBackgroundColors();
        filterLabel1.setIcon(null);       
        filterLabel2.setIcon(null);       
        filterLabel3.setIcon(null);        
        filterLabel4.setIcon(null);        
        filterLabel5.setIcon(null);
        for(int i = 0; i < NUMBER_OF_STAGES; i++) filterStages[i] = new FilterItem();
        
        score = 0;
        scoreLabel.setText("");
    }//GEN-LAST:event_resetButtonActionPerformed

    private void paperLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paperLabelMouseClicked
        setBackgroundColors();
        myIcon = paperLabel.getIcon();
        clickedFilter = PAPER;

    }//GEN-LAST:event_paperLabelMouseClicked

    private void paperTowelLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paperTowelLabelMouseClicked
        setBackgroundColors();
        myIcon = paperTowelLabel.getIcon();
        clickedFilter = PAPER_TOWEL;
    }//GEN-LAST:event_paperTowelLabelMouseClicked

    private void cornMealLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cornMealLabelMouseClicked
        setBackgroundColors();
        myIcon = cornMealLabel.getIcon();
        clickedFilter = CORNMEAL;
    }//GEN-LAST:event_cornMealLabelMouseClicked

    private void sandLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sandLabelMouseClicked
        setBackgroundColors();
        myIcon = sandLabel.getIcon();
        clickedFilter = SAND;
    }//GEN-LAST:event_sandLabelMouseClicked

    private void charcoalLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_charcoalLabelMouseClicked
        setBackgroundColors();
        myIcon = charcoalLabel.getIcon();
        clickedFilter = CHARCOAL;
    }//GEN-LAST:event_charcoalLabelMouseClicked

    private void meshLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_meshLabelMouseClicked
        setBackgroundColors();
        myIcon = meshLabel.getIcon();
        clickedFilter = MESH;
    }//GEN-LAST:event_meshLabelMouseClicked

    private void coffeeFilterLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_coffeeFilterLabelMouseClicked
       setBackgroundColors();
        myIcon = coffeeFilterLabel.getIcon();
        clickedFilter = COFFEE_FILTER;
    }//GEN-LAST:event_coffeeFilterLabelMouseClicked

    private void coarseGravelLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_coarseGravelLabelMouseClicked
        setBackgroundColors();
        myIcon = coarseGravelLabel.getIcon();
        clickedFilter = COARSE_GRAVEL;
    }//GEN-LAST:event_coarseGravelLabelMouseClicked

    private void flourLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flourLabelMouseClicked
        setBackgroundColors();
        myIcon = flourLabel.getIcon();
        clickedFilter = FLOUR;
    }//GEN-LAST:event_flourLabelMouseClicked

    private void linenClothLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_linenClothLabelMouseClicked
        setBackgroundColors();
        myIcon = linenClothLabel.getIcon();
        clickedFilter = LINEN_CLOTH;
    }//GEN-LAST:event_linenClothLabelMouseClicked
  
    private void grassLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grassLabelMouseClicked
        setBackgroundColors();
        myIcon = grassLabel.getIcon();
        clickedFilter = GRASS;

    }//GEN-LAST:event_grassLabelMouseClicked

    private void fineGravelLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fineGravelLabelMouseClicked
        setBackgroundColors();
        myIcon = fineGravelLabel.getIcon();
        clickedFilter = FINE_GRAVEL;
    }//GEN-LAST:event_fineGravelLabelMouseClicked

    private void cheeseClothLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cheeseClothLabelMouseClicked
        setBackgroundColors();
        myIcon = cheeseClothLabel.getIcon();
        clickedFilter = CHEESE_CLOTH;
    }//GEN-LAST:event_cheeseClothLabelMouseClicked

    private void cottonBallLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cottonBallLabelMouseClicked
        setBackgroundColors();
        myIcon = cottonBallLabel.getIcon();
        clickedFilter = COTTONBALL;
    }//GEN-LAST:event_cottonBallLabelMouseClicked

    private void featherLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_featherLabelMouseClicked
        setBackgroundColors();
        myIcon = featherLabel.getIcon();
        clickedFilter = FEATHERS;

    }//GEN-LAST:event_featherLabelMouseClicked

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        
        String text = "<HTML>";
        score = 0;
        for (int i = 0; i < NUMBER_OF_STAGES; i++) {
            score += filterStages[i].getPointValue(i);
            if(filterStages[i].getPointValue(i) == 0 ){               
           JOptionPane.showMessageDialog(this,"All of the water filter levels need filled.", 
                   "Get last materials in filter", JOptionPane.WARNING_MESSAGE);
            break;                
                    }
        }
        if (score > 0) scoreLabel.setText("" + score); // if score isn't updated, don't change the label
        
        if (score > highScore) {   // set new high score
            highScore = score;
            highScoreLabel.setText(""+highScore);
            text += "You've set a new high score!<br/>";
            
        }
        
        // establish messageLabel text, depending on how the filter does.
             if (score < 14)                text += "Your filter didn't do very well... Try again!";
        else if (score < 19 && score >= 14) text += "Your filter did ok, but not great. Try again!";
        else if (score < 22 && score >=19)  text += "Your filter is fantastic!";
        else if (score == 23)               text += "You've made the best filter in this demo. good work!";
        
        messageLabel.setText(text);
    }//GEN-LAST:event_runButtonActionPerformed

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
        opener.setVisible(true);
    }//GEN-LAST:event_helpButtonActionPerformed
    

 /**
 * Sets these colors for when a material is selected
 */
    private void setBackgroundColors(){
        filterLabel1.setBackground(selectionColor);
        filterLabel2.setBackground(selectionColor);
        filterLabel3.setBackground(selectionColor);
        filterLabel4.setBackground(selectionColor);
        filterLabel5.setBackground(selectionColor);
    }

/**
 * Default background color for filterLabels/
 */
 private void resetBackgroundColors(){
        filterLabel1.setBackground(startingColor);
        filterLabel2.setBackground(startingColor);
        filterLabel3.setBackground(startingColor);
        filterLabel4.setBackground(startingColor);
        filterLabel5.setBackground(startingColor);
    }
 
 /**
  * initializes all tool tips for the filter items in the jFrame.
  * This is only used in the initial components function.
  */
 public final void setToolTips() {
     paperLabel.setToolTipText(""+ PAPER.getItemName()+ ": "
                + PAPER.getPoreSizeString() + 
                " pores (" + PAPER.getPoreSize() + " microns)");
        charcoalLabel.setToolTipText(""+ CHARCOAL.getItemName()+ ": "
                + CHARCOAL.getPoreSizeString() + 
                " pores (" + CHARCOAL.getPoreSize() + " microns)");
        grassLabel.setToolTipText(""+ GRASS.getItemName()+ ": "
                + GRASS.getPoreSizeString() + 
                " pores (" + GRASS.getPoreSize() + " microns)");
        cottonBallLabel.setToolTipText("" + COTTONBALL.getItemName() + ": "
                + COTTONBALL.getPoreSizeString() +
                " pores (" + COTTONBALL.getPoreSize() + " microns)");    
        paperTowelLabel.setToolTipText("" + PAPER_TOWEL.getItemName() + ": "
                + PAPER_TOWEL.getPoreSizeString() +
                " pores (" + PAPER_TOWEL.getPoreSize() + " microns)");
        coffeeFilterLabel.setToolTipText("" + COFFEE_FILTER.getItemName() + ": "
                + COFFEE_FILTER.getPoreSizeString() +
                " pores (" + COFFEE_FILTER.getPoreSize() + " microns)");
        fineGravelLabel.setToolTipText("" + FINE_GRAVEL.getItemName() + "; "
                 + FINE_GRAVEL.getPoreSizeString() +
                " pores (" + FINE_GRAVEL.getPoreSize() + " microns)");
        coarseGravelLabel.setToolTipText("" + COARSE_GRAVEL.getItemName() + ": "
                 + COARSE_GRAVEL.getPoreSizeString() +
                 " pores (" + COARSE_GRAVEL.getPoreSize() + " microns)");       
        sandLabel.setToolTipText("" + SAND.getItemName()+ ": "
                  + SAND.getPoreSizeString() +
                  " pores (" + SAND.getPoreSize() + " microns)");
        linenClothLabel.setToolTipText("" + LINEN_CLOTH.getItemName()+ ": "
                  + LINEN_CLOTH.getPoreSizeString() +
                  " pores (" + LINEN_CLOTH.getPoreSize() + " microns)" );
        cheeseClothLabel.setToolTipText("" + CHEESE_CLOTH.getItemName()+ ": "
                  + CHEESE_CLOTH.getPoreSizeString() +
                  " pores (" + CHEESE_CLOTH.getPoreSize() + " microns)" );
        meshLabel.setToolTipText("" + MESH.getItemName()+ ": "
                  + MESH.getPoreSizeString() +
                  " pores (" + MESH.getPoreSize() + " microns)" );
        flourLabel.setToolTipText("" + FLOUR.getItemName()+ ": "
                  + FLOUR.getPoreSizeString() +
                  " pores (" + FLOUR.getPoreSize() + " microns)");
        cornMealLabel.setToolTipText("" + CORNMEAL.getItemName()+ ": "
                  + CORNMEAL.getPoreSizeString() +
                  " pores (" + CORNMEAL.getPoreSize() + " microns)");
        featherLabel.setToolTipText("" + FEATHERS.getItemName()+ ": "
                  + FEATHERS.getPoreSizeString() +
                  " pores (" + FEATHERS.getPoreSize() + " microns)"); 
 }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FilterJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FilterJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FilterJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FilterJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FilterJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundImageLabel;
    private javax.swing.JLabel charcoalLabel;
    private javax.swing.JLabel cheeseClothLabel;
    private javax.swing.JLabel coarseGravelLabel;
    private javax.swing.JLabel coffeeFilterLabel;
    private javax.swing.JLabel cornMealLabel;
    private javax.swing.JLabel cottonBallLabel;
    private javax.swing.JLabel featherLabel;
    private javax.swing.JLabel filterLabel1;
    private javax.swing.JLabel filterLabel2;
    private javax.swing.JLabel filterLabel3;
    private javax.swing.JLabel filterLabel4;
    private javax.swing.JLabel filterLabel5;
    private javax.swing.JLabel filterLevelsLabel;
    private javax.swing.JPanel filterLevelsPane;
    private javax.swing.JLabel fineGravelLabel;
    private javax.swing.JLabel flourLabel;
    private javax.swing.JLabel grassLabel;
    private javax.swing.JButton helpButton;
    private javax.swing.JLabel highScoreLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel linenClothLabel;
    private javax.swing.JPanel matLabelPane;
    private javax.swing.JLabel materialsLabel;
    private javax.swing.JLabel meshLabel;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JLabel paperLabel;
    private javax.swing.JLabel paperTowelLabel;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton runButton;
    private javax.swing.JLabel sandLabel;
    private javax.swing.JLabel scoreLabel;
    private javax.swing.JLabel tagHighScoreLabel;
    private javax.swing.JLabel tagScoreLabel;
    // End of variables declaration//GEN-END:variables
}
